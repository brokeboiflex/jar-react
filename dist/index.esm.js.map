{"version":3,"file":"index.esm.js","sources":["../src/router.tsx"],"sourcesContent":["import { createJSONStorage, persist, StateStorage } from \"zustand/middleware\";\r\nimport { create } from \"zustand\";\r\nimport { ReactNode, Fragment, isValidElement } from \"react\";\r\nexport interface RouterProps {\r\n  children: ReactNode;\r\n  routerStore: () => RouterState;\r\n}\r\nexport interface RouteProps {\r\n  path: string;\r\n  component: ReactNode;\r\n}\r\n\r\nexport interface RouterState {\r\n  history: string[];\r\n  canGoBack: boolean;\r\n  location: string;\r\n  navigate: (route: string) => void;\r\n  goBack: () => void;\r\n  clearHistory: () => void;\r\n}\r\n\r\nexport interface LinkProps {\r\n  to: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport function createLink(routerStore: () => RouterState) {\r\n  return function Link({ to, children }: LinkProps) {\r\n    const { navigate } = routerStore();\r\n    return (\r\n      <a\r\n        href=\"\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          navigate(to);\r\n        }}\r\n      >\r\n        {children}\r\n      </a>\r\n    );\r\n  };\r\n}\r\nexport function createRouterStore(\r\n  storage?: StateStorage,\r\n  key?: string\r\n): () => RouterState {\r\n  // @ts-ignore\r\n\r\n  if (storage) {\r\n    return create<RouterState>()(\r\n      persist(\r\n        (set) => ({\r\n          history: [\"/\"],\r\n          location: \"/\", // Default route\r\n          canGoBack: false,\r\n          navigate: (route: string) =>\r\n            set((state: RouterState) => ({\r\n              history: [...state.history, route],\r\n              location: route,\r\n              canGoBack: history.length > 1,\r\n            })),\r\n          goBack: () =>\r\n            set((state: RouterState) => ({\r\n              location: state.history[state.history.length - 2],\r\n              history: [...state.history].slice(0, -1),\r\n              canGoBack: history.length > 1,\r\n            })),\r\n          clearHistory: () =>\r\n            set(() => ({\r\n              history: [\"/\"],\r\n              location: \"/\",\r\n              canGoBack: false,\r\n            })),\r\n        }),\r\n        {\r\n          name: `router-storage${key ? \"-\" + key : \"\"}`,\r\n          storage: createJSONStorage(() => storage),\r\n        }\r\n      )\r\n    );\r\n  } else {\r\n    return create<RouterState>()((set) => ({\r\n      history: [\"/\"],\r\n      canGoBack: false,\r\n      location: \"/\", // Default route\r\n      navigate: (route: string) =>\r\n        set((state: RouterState) => ({\r\n          history: [...state.history, route],\r\n          location: route,\r\n          canGoBack: history.length > 1,\r\n        })),\r\n      goBack: () =>\r\n        set((state: RouterState) => ({\r\n          location: state.history[state.history.length - 2],\r\n          history: [...state.history].slice(0, -1),\r\n          canGoBack: history.length > 1,\r\n        })),\r\n      clearHistory: () =>\r\n        set(() => ({\r\n          history: [\"/\"],\r\n          location: \"/\",\r\n          canGoBack: false,\r\n        })),\r\n    }));\r\n  }\r\n}\r\nexport function Router({ children, routerStore }: RouterProps) {\r\n  const { location } = routerStore();\r\n\r\n  // Filter children to get Route components\r\n  const routes = Array.isArray(children) ? children : [children];\r\n  const routeElements = routes.filter(\r\n    (child) => isValidElement(child) && (child as any).type === Route\r\n  );\r\n\r\n  // Find the component that matches the current route\r\n  const currentRoute = routeElements.find((route) => {\r\n    const routeProps = (route as any).props as RouteProps;\r\n    return routeProps.path === location;\r\n  });\r\n\r\n  return currentRoute ? (\r\n    <Fragment key={location}>{(currentRoute as any).props.component}</Fragment>\r\n  ) : null;\r\n}\r\n\r\n// Route component\r\n// @ts-ignore\r\nexport function Route({ path, component }: RouteProps) {\r\n  return null;\r\n}\r\n"],"names":["createLink","routerStore","_ref","to","children","navigate","_jsx","href","onClick","e","preventDefault","createRouterStore","storage","key","create","persist","set","history","location","canGoBack","route","state","concat","length","goBack","slice","clearHistory","name","createJSONStorage","Router","_ref2","currentRoute","Array","isArray","filter","child","isValidElement","type","Route","find","props","path","Fragment","component","_ref3"],"mappings":"2MA0BgBA,EAAWC,GACzB,OAAgB,SAAIC,OAAGC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SACjBC,EAAaJ,IAAbI,SACR,OACEC,EACE,IAAA,CAAAC,KAAK,GACLC,QAAS,SAACC,GACRA,EAAEC,iBACFL,EAASF,EACX,EAECC,SAAAA,GAGP,CACF,UACgBO,EACdC,EACAC,GAIA,OAAID,EACKE,IACLC,EACE,SAACC,GAAG,MAAM,CACRC,QAAS,CAAC,KACVC,SAAU,IACVC,WAAW,EACXd,SAAU,SAACe,GAAa,OACtBJ,EAAI,SAACK,GAAwB,MAAA,CAC3BJ,QAAO,GAAAK,OAAMD,EAAMJ,QAASG,CAAAA,IAC5BF,SAAUE,EACVD,UAAWF,QAAQM,OAAS,EAC7B,EAAE,EACLC,OAAQ,WACN,OAAAR,EAAI,SAACK,GAAkB,MAAM,CAC3BH,SAAUG,EAAMJ,QAAQI,EAAMJ,QAAQM,OAAS,GAC/CN,QAAS,GAAAK,OAAID,EAAMJ,SAASQ,MAAM,GAAI,GACtCN,UAAWF,QAAQM,OAAS,EAC7B,EAAE,EACLG,aAAc,WAAA,OACZV,EAAI,WAAO,MAAA,CACTC,QAAS,CAAC,KACVC,SAAU,IACVC,WAAW,EACZ,EAAE,EACN,EACD,CACEQ,KAAuBd,kBAAAA,EAAM,IAAMA,EAAM,IACzCD,QAASgB,EAAkB,WAAM,OAAAhB,CAAO,MAKvCE,IAAsB,SAACE,SAAS,CACrCC,QAAS,CAAC,KACVE,WAAW,EACXD,SAAU,IACVb,SAAU,SAACe,GACT,OAAAJ,EAAI,SAACK,GAAkB,MAAM,CAC3BJ,QAAO,GAAAK,OAAMD,EAAMJ,QAAO,CAAEG,IAC5BF,SAAUE,EACVD,UAAWF,QAAQM,OAAS,EAC7B,EAAE,EACLC,OAAQ,WACN,OAAAR,EAAI,SAACK,GAAkB,MAAM,CAC3BH,SAAUG,EAAMJ,QAAQI,EAAMJ,QAAQM,OAAS,GAC/CN,QAAS,GAAAK,OAAID,EAAMJ,SAASQ,MAAM,GAAI,GACtCN,UAAWF,QAAQM,OAAS,EAC7B,EAAE,EACLG,aAAc,WAAA,OACZV,EAAI,WAAO,MAAA,CACTC,QAAS,CAAC,KACVC,SAAU,IACVC,WAAW,EACZ,EAAE,EACN,EAEL,UACgBU,EAAMC,GAAuC,IAApC1B,EAAQ0B,EAAR1B,SACfc,GAAajB,EADuB6B,EAAX7B,eACzBiB,SASFa,GANSC,MAAMC,QAAQ7B,GAAYA,EAAW,CAACA,IACxB8B,OAC3B,SAACC,gBAAK,OAAKC,EAAeD,IAAWA,EAAcE,OAASC,CAAK,GAIhCC,KAAK,SAACnB,GAEvC,OADoBA,EAAcoB,MAChBC,OAASvB,CAC7B,GAEA,OAAOa,EACLzB,EAACoC,YAA0BX,EAAqBS,MAAMG,WAAvCzB,GACb,IACN,UAIgBoB,EAAKM,GACnB,OACF,IAAA"}